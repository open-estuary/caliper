#! /bin/sh
unset LIBPATH
#******************************************************************************
#
#   Copyright (c) International Business Machines  Corp., 2000
#
#   This program is free software;  you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY;  without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
#   the GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program;  if not, write to the Free Software
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
#
#
#
#  FILE   : mc_opts
#
#  PURPOSE: To verify that three of the new options for level IPPROTO_IP
#           Service Interface are initially set to the default values as
#           defined in the documentation and that each of the new options
#           can be set and read properly by the setsockopt and getsockopt
#           routines, respectively.  To test boundary conditions and to
#           generate errors while exercising the IP Multicast Service
#           Interface options.
#
#  HISTORY:
#    03/26/01 Robbie Williamson (robbiew@us.ibm.com)
#      -Ported
#
#******************************************************************************

TC=mc_opts
EXECUTABLES=${EXECUTABLES:-"mc_verify_opts mc_verify_opts_error"}
IPADDR=${IPADDR:-$(mc_gethost `hostname`| grep address |awk '{ print $2 }')}

export TCID=$TC
export TST_TOTAL=1
export TST_COUNT=1

. test.sh

if [ -z $IPADDR ]; then
	tst_brkm TCONF "Not found $(hostname) in /etc/hosts"
fi

tst_resm TINFO "doing test."

COUNT=1
while [ $COUNT -le 10 ]
do
	# Run setsockopt/getsockopt test
	tst_resm TINFO "Running $EXECUTABLES on $IPADDR"
	for i in $EXECUTABLES
	do
		$i $IPADDR > /dev/null 2>&1
		if [ $? -ne 0 ]; then
			tst_brkm TFAIL "$i $IPADDR failed"
		fi
	done

	tst_resm TINFO "Running ping with bad values"
	ping -T 777 224.0.0.1 > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		tst_brkm TFAIL "Multicast range should be out of range"
	fi

	tst_resm TINFO "Running ping on a invalid interface!"
	ping -I 3.3.3.3 224.0.0.1 > /dev/null 2>&1
	if [ $? -eq 0 ]; then
		tst_brkm TFAIL "ping on bogus interface should fail"
	fi

	COUNT=$(( $COUNT + 1 ))
done

tst_resm TPASS "Test Successful"
tst_exit
