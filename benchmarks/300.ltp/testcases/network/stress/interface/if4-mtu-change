#!/bin/sh

################################################################################
##                                                                            ##
## Copyright (c) International Business Machines  Corp., 2005                 ##
##                                                                            ##
## This program is free software;  you can redistribute it and#or modify      ##
## it under the terms of the GNU General Public License as published by       ##
## the Free Software Foundation; either version 2 of the License, or          ##
## (at your option) any later version.                                        ##
##                                                                            ##
## This program is distributed in the hope that it will be useful, but        ##
## WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY ##
## or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License   ##
## for more details.                                                          ##
##                                                                            ##
## You should have received a copy of the GNU General Public License          ##
## along with this program;  if not, write to the Free Software               ##
## Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA    ##
##                                                                            ##
##                                                                            ##
################################################################################
#
# File:
#   if4-mtu-change
#
# Description:
#   Verify the IPv4 connectivity isn't broken with changing MTU many times
#    test01 - by ifconfig command
#    test02 - by ip command
#
# Setup:
#   See ltp-yyyymmdd/testcases/network/stress/README
#
# Author:
#   Mitsuru Chinen <mitch@jp.ibm.com>
#
# History:
#	Oct 19 2005 - Created (Mitsuru Chinen)
#
#-----------------------------------------------------------------------
# Uncomment line below for debug output.
#trace_logic=${trace_logic:-"set -x"}
$trace_logic

# Make sure the value of LTPROOT
LTPROOT=${LTPROOT:-`(cd ../../../../ ; pwd)`}
export LTPROOT

# Total number of the test case
TST_TOTAL=2
export TST_TOTAL

# Default of the test case ID and the test case count
TCID=if4-mtu-change
TST_COUNT=0
export TCID
export TST_COUNT

# Check the environmanet variable for the test
. check_envval || exit $TST_TOTAL

# The number of the change of the MTU
MTU_CHANGE_TIMES=${MTU_CHANGE_TIMES:-1000}

# The interval of the change [second]
CHANGE_INTERVAL=${CHANGE_INTERVAL:-5}

# The array of the value which MTU is changed into sequentially
CHANGE_VALUES="784 1142 426 1500 68 1500 68 748 68 1142 1500"

# The number of the test link where tests run
LINK_NUM=0

# Network portion of the IPv4 address
IPV4_NETWORK=${IPV4_NETWORK:-"10.0.0"}

# Host portion of the IPv4 address
LHOST_IPV4_HOST=${LHOST_IPV4_HOST:-"2"}	# local host
RHOST_IPV4_HOST=${RHOST_IPV4_HOST:-"1"}	# remote host



#-----------------------------------------------------------------------
#
# NAME:
#   do_setup
#
# DESCRIPTION:
#   Make a IPv4 connectivity
#
# SET VALUES:
#   lhost_ipv4addr	- IPv4 Address of the local host
#   rhost_ipv4addr	- IPv4 Address of the remote host
#   lhost_ifname	- Interface name of the localhost
#
#-----------------------------------------------------------------------
do_setup()
{
    TCID=if4-mtu-change
    TST_COUNT=0

    # Initialize the interfaces
    initialize_if lhost ${LINK_NUM}
    initialize_if rhost ${LINK_NUM}

    # Make sure the TCP traffic server/client doesn't run
    bg_tcp_traffic killall

    # Set IPv4 address to the interfaces
    set_ipv4addr lhost ${LINK_NUM} ${IPV4_NETWORK} ${LHOST_IPV4_HOST}
    if [ $? -ne 0 ]; then
	tst_resm TBROK "Failed to set an IPv4 address at the local host"
	exit $TST_TOTAL
    fi
    set_ipv4addr rhost ${LINK_NUM} ${IPV4_NETWORK} ${RHOST_IPV4_HOST}
    if [ $? -ne 0 ]; then
	tst_resm TBROK "Failed to set an IPv4 address at the remote host"
	exit $TST_TOTAL
    fi

    # IPv4 address of the local and remote host
    lhost_ipv4addr="${IPV4_NETWORK}.${LHOST_IPV4_HOST}"
    rhost_ipv4addr="${IPV4_NETWORK}.${RHOST_IPV4_HOST}"

    # Get the Interface name of local host
    lhost_ifname=`get_ifname lhost ${LINK_NUM}`
    if [ $? -ne 0 ]; then
	tst_resm TBROK "Failed to get the interface name at the local host"
	exit $TST_TOTAL
    fi
}


#-----------------------------------------------------------------------
#
# NAME:
#   do_cleanup
#
# DESCRIPTION:
#   Recover the tested interfaces
#
#-----------------------------------------------------------------------
do_cleanup()
{
    # Make sure the TCP traffic server/client doesn't run
    bg_tcp_traffic killall

    # Initialize the interfaces
    initialize_if lhost ${LINK_NUM}
    initialize_if rhost ${LINK_NUM}
}


#-----------------------------------------------------------------------
#
# FUNCTION:
#   test_body
#
# DESCRIPTION:
#   main code of the test
#
# Arguments:
#   $1:	define the test type
#	1 - ifconfig command case
#	2 - ip command case
#
#-----------------------------------------------------------------------
test_body()
{
    test_type=$1

    TCID=if4-mtu-change0${test_type}
    TST_COUNT=${test_type}

    case $test_type in
	1)
	test_command="ifconfig"
	;;
	2)
	test_command="ip"
	;;
	*)
	tst_resm TBROK "unspecified case"
	return 1
	;;
    esac

    tst_resm TINFO "Verify the IPv4 connectivity is not broken when $test_command command changes MTU $MTU_CHANGE_TIMES times every $CHANGE_INTERVAL seconds"

    # Check the connctivity
    check_icmpv4_connectivity $lhost_ifname $rhost_ipv4addr
    if [ $? -ne 0 ]; then
	tst_resm TBROK "Test Link $LINK_NUM is somthing wrong."
	return 1
    fi

    # Make a background TCP traffic
    server_pid=`bg_tcp_traffic make $lhost_ipv4addr`

    # Start the loop
    mtu_array_len=`echo $CHANGE_VALUES | wc -w`
    cnt=0
    while [ $cnt -lt $MTU_CHANGE_TIMES ]; do
	# Wait CHANGE_INTERVAL seconds
	sleep $CHANGE_INTERVAL

	# Change
	nth=`expr $cnt % $mtu_array_len`
	field=`expr $nth + 1`
	mtu=`echo $CHANGE_VALUES | cut -d ' ' -f $field`

	case $test_type in
	    1)
	    ifconfig $lhost_ifname mtu $mtu
	    ;;
	    2)
	    ip link set $lhost_ifname mtu $mtu
	    ;;
	esac
	if [ $? -ne 0 ]; then
	    tst_resm TFAIL "Failed to change the mtu at $cnt time"
	    return 1
	fi

	# Check the background TCP traffic
	bg_tcp_traffic check $server_pid
	if [ $? -ne 0 ]; then
	    server_pid=`bg_tcp_traffic make $lhost_ipv4addr`
	fi

	cnt=`expr $cnt + 1`
    done

    # Stop the background TCP traffic
    bg_tcp_traffic killall

    # Check the connectivity again
    check_icmpv4_connectivity $lhost_ifname $rhost_ipv4addr
    if [ $? -ne 0 ]; then
	tst_resm TFAIL "$lhost_ifname is broken."
	return 1
    fi
    tst_resm TPASS "Test is finished correctly."
    return 0
}


#-----------------------------------------------------------------------
#
# Main
#
# Exit Value:
#   The number of the failure
#
#-----------------------------------------------------------------------

RC=0
do_setup
test_body 1 || RC=`expr $RC + 1`	# Case of ifconfig command
test_body 2 || RC=`expr $RC + 1`	# Case of ip command
do_cleanup

exit $RC
