#!/bin/sh

################################################################################
##                                                                            ##
## Copyright (c) International Business Machines  Corp., 2005                 ##
##                                                                            ##
## This program is free software;  you can redistribute it and#or modify      ##
## it under the terms of the GNU General Public License as published by       ##
## the Free Software Foundation; either version 2 of the License, or          ##
## (at your option) any later version.                                        ##
##                                                                            ##
## This program is distributed in the hope that it will be useful, but        ##
## WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY ##
## or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License   ##
## for more details.                                                          ##
##                                                                            ##
## You should have received a copy of the GNU General Public License          ##
## along with this program;  if not, write to the Free Software               ##
## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 03111-1307 USA    ##
##                                                                            ##
##                                                                            ##
################################################################################
#
# File:
#   ssh-stress03-rmt
#
# Description:
#   This is the remote script for ssh-ipv${IP_VER}-stress03
#
# Author:
#   Mitsuru Chinen <mitch@jp.ibm.com>
#
# Arguments:
#   $1: version of IP
#   $2: IP address log into
#   $3: ssh_config file
#   $4: quantity of connection
#   $5: duration
#
# Exit Value:
#    0: Success
#   >0: Fail
#
# History:
#	Oct 19 2005 - Created (Mitsuru Chinen)
#
#-----------------------------------------------------------------------
# Uncomment line below for debug output.
#trace_logic=${trace_logic:-"set -x"}
$trace_logic

# Check the arguments
if [ $# -ne 6 ]; then
    echo "Usage: $0 LTPROOT IP_version server_addr ssh_config remote_port duration"
    exit 1
fi
ltproot="$1"
ip_ver="$2"
server_ipaddr="$3"
ssh_config="$4"
remote_port="$5"
duration="$6"

# Check the connectivity first
if [ ! -f $ssh_config ]; then
    echo "$ssh_config is something wrong."
    exit 1
fi
ssh $ver_opt -F $ssh_config $server_ipaddr "true </dev/null >/dev/null 2>&1" >/dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Failed to connect $server_ipaddr"
    exit 1
fi

# Find an available port
stat_file=`mktemp`
netstat -a -n -t | awk '{ print $4 }' | sed "s/^.*://" >$stat_file 2>/dev/null
local_port=1025
while true ; do
    grep -l "^${local_port}$" $stat_file >/dev/null 2>&1
    if [ $? -eq 0 ]; then
	local_port=`expr $local_port + 1`
	if [ $local_port -gt 65535 ]; then
	    echo "No port is avaiable"
	    rm -f $stat_file
	    exit 1
	fi
    else
	rm -f $stat_file
	break
    fi
done

# Search the TCP traffic client
client_not_found=true
for clientdir in ${ltproot}/testcases/bin ${ltproot}/testcases/network/stress/bin ; do
    client="${clientdir}/ns-tcpclient"
    if [ -x $client ]; then
	client_not_found=false
	break
    fi
done
if $client_not_found ; then
    echo "TCP traffic client is not found"
    exit 1
fi

# Set the ssh portforwarding
case $ip_ver in
    4)
    localhost="127.0.0.1"
    ssh -4 -f -N -L ${local_port}:${server_ipaddr}:${remote_port} root@${server_ipaddr} -F $ssh_config
    ;;
    6)
    localhost="::1"
    ssh -6 -f -N -L ${local_port}/[${server_ipaddr}]/${remote_port} root@${server_ipaddr} -F $ssh_config
    ;;
    *)
    echo "$ver_opt is unknown IP version"
    exit 1
    ;;
esac



# Start the TCP traffic client
$client -S $localhost -p ${local_port} -f $ip_ver -t $duration
if [ $? -ne 0 ]; then
    echo "TCP traffic client is dead."

    # Stop the ssh port forwording
    for ssh_pid in `ps auxw | fgrep -v grep | grep "ssh[[:blank:]].*${ssh_config}" | awk '{print $2}'` ; do
	kill $ssh_pid
    done
    exit 1
fi

# Stop the ssh port forwording
for ssh_pid in `ps auxw | fgrep -v grep | grep "ssh[[:blank:]].*${ssh_config}" | awk '{print $2}'` ; do
    kill $ssh_pid
done

# Check the connectivity again
ssh $ver_opt -F $ssh_config $server_ipaddr "true </dev/null >/dev/null 2>&1" >/dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Failed to connect $server_ipaddr. ssh connectivity is lost."
    exit 1
fi

exit 0
